cpu "8085.tbl"
hof "int8"

org 9000h

GTHEX: EQU 030EH

CURDT: EQU 8FF1H
UPDDT: EQU 044cH

;Square/Triangular/Sawtooth/Staircase/Symmetrical Staircase
CALL SINEVAL


MVI A,00H
STA CURDT ; initially display 0000 on address field
CALL UPDDT

MVI A,00H
MVI B,01H
CALL GTHEX
; RST 5
MVI D,00H
XCHG
SHLD 8842H
LXI H,8480H
SHLD 8840H
CALL DIV
; LHLD 8902H
; DCX H
; DCX H
; SHLD 8840H


MVI A,80H
OUT 43H

MVI A,8BH
OUT 03H

IN 01H


CPI 80H
JZ SQUARE
CPI 10H
JZ TRIANGULAR
CPI 08H
JZ SAWTOOTH
CPI 40H
JZ STAIRCASE
CPI 20H
JZ SYMSTAIRCASE
CPI 04H
JZ SINE
JMP OVER

; DELAY2:
; 	MVI L,0F8H
; 	L3:
; 		DCR L
; 		PUSH PSW
; 		POP PSW
; 		OUT 40H
; 		JNZ L3
; 	RET

DELAY:
		LHLD 8902H
		; LXI H,0FFFFH 
		INR H
		DCR H
		JZ L4
		L1:
			L2:
				PUSH PSW
				POP PSW
				OUT 40H
				DCR L
			JNZ L2
		DCR H
		JNZ L1
		; RET

		L4:
			PUSH PSW
			POP PSW
			OUT 40H
			DCR L
		JNZ L4

	RET


SQUARE:
MVI A,00H
CALL DELAY

MVI A,0FFH
CALL DELAY

JMP SQUARE


TRIANGULAR:
LXI H, 0063H
SHLD 8842H

LHLD 8902H
SHLD 8840H

CALL DIV

LHLD 8902

TRIANGULARTEMP:

MVI A,00H
MVI B, 63H
TLOOP1:
	CALL DELAY
	ADI 02H
	DCR B
	JNZ TLOOP1

MVI B, 63H
TLOOP2:
	CALL DELAY
	SBI 02H
	DCR B
	JNZ TLOOP2

JMP TRIANGULARTEMP



SAWTOOTH:
LXI H, 0063H
SHLD 8842H

LHLD 8902H
SHLD 8840H

CALL DIV

SAWTOOTHTEMP:
MVI A,00H
MVI B,063H
SAWTEMP:
CALL DELAY
CALL DELAY
ADI 02H
DCR B
JNZ SAWTEMP


MOV A,00H
OUT 40H
JMP SAWTOOTHTEMP


STAIRCASE:
LHLD 8902H
; DAD H
SHLD 8840H
LXI H, 0007H
SHLD 8842H
CALL DIV

MVI A,00H
STAIRTEMP:

CALL DELAY
CALL DELAY

ADI 20H
CPI 0E0H
JNZ STAIRTEMP


MVI	A, 00H
JMP STAIRTEMP



SYMSTAIRCASE:
LHLD 8902H
SHLD 8840H
LXI H, 0007H
SHLD 8842H
CALL DIV

MVI A,00H
SYMSTAIRTEMP:

CALL DELAY
; MVI B,11H
; SYMSTAIRDELAY:
; OUT 40H
; DCR B
; JNZ SYMSTAIRDELAY

ADI 20H
CPI 0E0H
JNZ SYMSTAIRTEMP

SBI 20H
SYMSTAIRTEMP2:

CALL DELAY
; MVI B,11H
; SYMSTAIRDELAY2:
; OUT 40H
; DCR B
; JNZ SYMSTAIRDELAY2

SBI 20H
JNZ SYMSTAIRTEMP2

CALL DELAY
JMP SYMSTAIRTEMP



SINE:

LHLD 8902H
SHLD 8840H
LXI H, 0024H
SHLD 8842H
CALL DIV

SINETEMP:

MVI D,24H
LXI H,8000H

POSHALF:
MOV A,M
; OUT 40H
MOV B,H
MOV C,L
CALL DELAY
MOV H,B
MOV L,C
INX H
DCR D
JNZ POSHALF
MVI A,24H

MVI D,24H
NEGHALF:
DCX H
MOV A,M
MOV B,H
MOV C,L
CALL DELAY
MOV H,B
MOV L,C
; OUT 40H
DCR D
JNZ NEGHALF
JMP SINETEMP




OVER:
RST 5



DIV:
	LXI B, 0000H 
	LHLD 8842h ; load first number(dividend) in h-l register pair from 8842h(lower 8 bits) and 8843h(higher 8 bits)
	XCHG ; swap content of d-e and h-l
	LHLD 8840h ; load second number(divisor) in h-l register pair from 8840h(lower 8 bits) and 8841h(higher 8 bits)
	LBL2:
	MOV A, L 
	SUB E ; l-e
	MOV L, A ; store l-e in l
	MOV A, H
	SBB D ; h-d (with borrow if any)
	MOV H, A ; store h-d in h
	JC LBL ; if carry triggered it means de>hl and we need to end
	INX B ; else increment quotient
	JMP LBL2 ; loop back to LBL2
	LBL:
	DAD D ; we need to add de since an extra subtraction will be done in the last iteration of loop
	SHLD 8900h ; h-l stores remainder and it is moved to location 8900h(lower 8 bits) and 8901h(higher 8 bits)
	MOV L, C
	MOV H, B
	SHLD 8902h ; ; b-c stores quotient and it is moved to location 8902h(lower 8 bits) and 8903h(higher 8 bits)
	RET


SINEVAL:
MVI A, 00H
STA 8000H
MVI A, 01H
STA 8001H
MVI A, 02H
STA 8002H
MVI A, 04H
STA 8003H
MVI A, 08H
STA 8004H
MVI A, 11H
STA 8005H
MVI A, 17H
STA 8006H
MVI A, 1EH
STA 8007H
MVI A, 25H
STA 8008H
MVI A, 2DH
STA 8009H
MVI A, 36H
STA 800AH
MVI A, 40H
STA 800BH
MVI A, 49H
STA 800CH
MVI A, 54H
STA 800DH
MVI A, 5EH
STA 800EH
MVI A, 69H
STA 800FH
MVI A, 74H
STA 8010H
MVI A, 7FH
STA 8011H
MVI A, 84H
STA 8012H
MVI A, 95H
STA 8013H
MVI A, 9FH
STA 8014H
MVI A, 0AFH
STA 8015H
MVI A, 0B4H
STA 8016H
MVI A, 0C0H
STA 8017H
MVI A, 0C8H
STA 8018H
MVI A, 0D0H
STA 8019H
MVI A, 0D8H
STA 801AH
MVI A, 0E0H
STA 801BH
MVI A, 0EAH
STA 801CH
MVI A, 0EDH
STA 801DH
MVI A, 0EFH
STA 801EH
MVI A, 0F2H
STA 801FH
MVI A, 0F9H
STA 8020H
MVI A, 0FCH
STA 8021H
MVI A, 0FDH
STA 8022H
MVI A, 0FFH
STA 8023H
MVI A, 00H
STA 8024H


RET